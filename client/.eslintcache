[{"/Users/Dam/Programming/Projects/devConnector/client/src/index.js":"1","/Users/Dam/Programming/Projects/devConnector/client/src/App.js":"2","/Users/Dam/Programming/Projects/devConnector/client/src/components/layouts/Landing.js":"3","/Users/Dam/Programming/Projects/devConnector/client/src/components/layouts/Navbar.js":"4","/Users/Dam/Programming/Projects/devConnector/client/src/components/auth/Register.js":"5","/Users/Dam/Programming/Projects/devConnector/client/src/components/auth/Login.js":"6","/Users/Dam/Programming/Projects/devConnector/client/src/store.js":"7","/Users/Dam/Programming/Projects/devConnector/client/src/reducers/index.js":"8","/Users/Dam/Programming/Projects/devConnector/client/src/reducers/alert.js":"9","/Users/Dam/Programming/Projects/devConnector/client/src/actions/types.js":"10","/Users/Dam/Programming/Projects/devConnector/client/src/actions/alert.js":"11","/Users/Dam/Programming/Projects/devConnector/client/src/components/layouts/Alert.js":"12","/Users/Dam/Programming/Projects/devConnector/client/src/actions/auth.js":"13","/Users/Dam/Programming/Projects/devConnector/client/src/reducers/auth.js":"14","/Users/Dam/Programming/Projects/devConnector/client/src/utils/setAuthToken.js":"15","/Users/Dam/Programming/Projects/devConnector/client/src/components/dashboard/Dashboard.js":"16","/Users/Dam/Programming/Projects/devConnector/client/src/components/routing/PrivateRoute.js":"17","/Users/Dam/Programming/Projects/devConnector/client/src/reducers/profile.js":"18","/Users/Dam/Programming/Projects/devConnector/client/src/actions/profile.js":"19","/Users/Dam/Programming/Projects/devConnector/client/src/components/layouts/Spinner.js":"20","/Users/Dam/Programming/Projects/devConnector/client/src/components/profile-forms/CreateProfile.js":"21","/Users/Dam/Programming/Projects/devConnector/client/src/components/dashboard/DashboardActions.js":"22","/Users/Dam/Programming/Projects/devConnector/client/src/components/profile-forms/EditProfile.js":"23","/Users/Dam/Programming/Projects/devConnector/client/src/components/profile-forms/AddExperience.js":"24","/Users/Dam/Programming/Projects/devConnector/client/src/components/profile-forms/AddEducation.js":"25","/Users/Dam/Programming/Projects/devConnector/client/src/components/dashboard/Experience.js":"26"},{"size":199,"mtime":1607550669672,"results":"27","hashOfConfig":"28"},{"size":2012,"mtime":1607810663508,"results":"29","hashOfConfig":"28"},{"size":1100,"mtime":1607735622745,"results":"30","hashOfConfig":"28"},{"size":1360,"mtime":1607734382426,"results":"31","hashOfConfig":"28"},{"size":3490,"mtime":1607658450437,"results":"32","hashOfConfig":"28"},{"size":2325,"mtime":1607658341583,"results":"33","hashOfConfig":"28"},{"size":392,"mtime":1607555736594,"results":"34","hashOfConfig":"28"},{"size":201,"mtime":1607713632842,"results":"35","hashOfConfig":"28"},{"size":467,"mtime":1607743002816,"results":"36","hashOfConfig":"28"},{"size":562,"mtime":1607808425861,"results":"37","hashOfConfig":"28"},{"size":356,"mtime":1607575307977,"results":"38","hashOfConfig":"28"},{"size":496,"mtime":1607574897838,"results":"39","hashOfConfig":"28"},{"size":2203,"mtime":1607743357835,"results":"40","hashOfConfig":"28"},{"size":1282,"mtime":1607742949667,"results":"41","hashOfConfig":"28"},{"size":253,"mtime":1607655616366,"results":"42","hashOfConfig":"28"},{"size":1841,"mtime":1607814635501,"results":"43","hashOfConfig":"28"},{"size":725,"mtime":1607661436621,"results":"44","hashOfConfig":"28"},{"size":989,"mtime":1607808771783,"results":"45","hashOfConfig":"28"},{"size":3214,"mtime":1607808701971,"results":"46","hashOfConfig":"28"},{"size":293,"mtime":1607735291189,"results":"47","hashOfConfig":"28"},{"size":6216,"mtime":1607791906849,"results":"48","hashOfConfig":"28"},{"size":652,"mtime":1607745062481,"results":"49","hashOfConfig":"28"},{"size":7963,"mtime":1607814175008,"results":"50","hashOfConfig":"28"},{"size":3191,"mtime":1607810139549,"results":"51","hashOfConfig":"28"},{"size":3185,"mtime":1607810979545,"results":"52","hashOfConfig":"28"},{"size":1398,"mtime":1607814401173,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"ztem5g",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Dam/Programming/Projects/devConnector/client/src/index.js",[],["110","111"],"/Users/Dam/Programming/Projects/devConnector/client/src/App.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/components/layouts/Landing.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/components/layouts/Navbar.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/components/auth/Register.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/components/auth/Login.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/store.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/reducers/index.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/reducers/alert.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/actions/types.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/actions/alert.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/components/layouts/Alert.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/actions/auth.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/reducers/auth.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/utils/setAuthToken.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/components/dashboard/Dashboard.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/components/routing/PrivateRoute.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/reducers/profile.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/actions/profile.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/components/layouts/Spinner.js",["112"]," import React, { Fragment } from 'react';\n import spinner from './spinner.gif';\n\n export default () => (\n     <Fragment>\n        <img \n            src={spinner} \n            style={{width: '200px', margin: 'auto', display: 'block'}}\n            alt=\"Loading...\"\n        />\n     </Fragment>\n );","/Users/Dam/Programming/Projects/devConnector/client/src/components/profile-forms/CreateProfile.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/components/dashboard/DashboardActions.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/components/profile-forms/EditProfile.js",["113"],"/Users/Dam/Programming/Projects/devConnector/client/src/components/profile-forms/AddExperience.js",["114"],"import React, { Fragment, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addExperience } from '../../actions/profile';\n\nconst AddExperience = ({ addExperience, history }) => {\n    const [ formData, setFormData ] = useState({\n        company: '',\n        title: '',\n        location: '',\n        from: '',\n        to: '',\n        current: false,\n        description: ''\n    });\n\n    const [ toDateDisabled, toggleDisabled ] = useState(false);\n\n    const {\n        company,\n        title,\n        location,\n        from,\n        to,\n        current,\n        description\n    } = formData;\n\n    const onChange = e => \n        setFormData({ ...formData, [e.target.name]:e.target.value }); \n\n\n    return (\n        <Fragment>\n        <h1 className=\"large text-primary\">\n        Add An Experience\n       </h1>\n       <p className=\"lead\">\n         <i className=\"fas fa-code-branch\"></i> Add any developer/programming\n         positions that you have had in the past\n       </p>\n       <small>* = required field</small>\n       <form className=\"form\" onSubmit={e => {\n           e.preventDefault();\n           addExperience(formData, history);\n       }}>\n         <div className=\"form-group\">\n           <input type=\"text\" placeholder=\"* Job Title\" name=\"title\" value={title} onChange={e => onChange(e)} required />\n         </div>\n         <div className=\"form-group\">\n           <input type=\"text\" placeholder=\"* Company\" name=\"company\" value={company} onChange={e => onChange(e)}required />\n         </div>\n         <div className=\"form-group\">\n           <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)}/>\n         </div>\n         <div className=\"form-group\">\n           <h4>From Date</h4>\n           <input type=\"date\" name=\"from\" value={from} onChange={e => onChange(e)}/>\n         </div>\n          <div className=\"form-group\">\n           <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\n               setFormData({ ...formData, current: !current });\n               toggleDisabled(!toDateDisabled);\n           }}/> {' '}Current Job</p>\n         </div>\n         <div className=\"form-group\">\n           <h4>To Date</h4>\n           <input \n                type=\"date\" \n                name=\"to\" \n                value={to} \n                onChange={e => onChange(e)}\n                disabled={ toDateDisabled ? 'disabled' : ''}\n                />\n         </div>\n         <div className=\"form-group\">\n           <textarea\n             name=\"description\"\n             cols=\"30\"\n             rows=\"5\"\n             placeholder=\"Job Description\"\n             value={description} \n             onChange={e => onChange(e)}\n           ></textarea>\n         </div>\n         <input type=\"submit\" className=\"btn btn-primary my-1\" />\n         <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n       </form>\n        </Fragment>\n    )\n}\n\nAddExperience.propTypes = {\n    addExperience: PropTypes.func.isRequired \n}\n\nexport default connect(null, { addExperience })(AddExperience);\n","/Users/Dam/Programming/Projects/devConnector/client/src/components/profile-forms/AddEducation.js",["115"],"import React, { Fragment, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addEducation } from '../../actions/profile';\n\nconst AddEducation = ({ addEducation, history }) => {\n    const [ formData, setFormData ] = useState({\n        school: '',\n        degree: '',\n        fieldofstudy: '',\n        from: '',\n        to: '',\n        current: false,\n        description: ''\n    });\n\n    const [ toDateDisabled, toggleDisabled ] = useState(false);\n\n    const {\n        school,\n        degree,\n        fieldofstudy,\n        from,\n        to,\n        current,\n        description\n    } = formData;\n\n    const onChange = e => \n        setFormData({ ...formData, [e.target.name]:e.target.value }); \n\n\n    return (\n        <Fragment>\n        <h1 className=\"large text-primary\">\n        Add Your Education\n       </h1>\n       <p className=\"lead\">\n         <i className=\"fas fa-code-branch\"></i> Add any school or bootcamp you have attended\n       </p>\n       <small>* = required field</small>\n       <form className=\"form\" onSubmit={e => {\n           e.preventDefault();\n           addEducation(formData, history);\n       }}>\n         <div className=\"form-group\">\n           <input type=\"text\" placeholder=\"* School\" name=\"school\" value={school} onChange={e => onChange(e)} required />\n         </div>\n         <div className=\"form-group\">\n           <input type=\"text\" placeholder=\"* Degree or Certficate\" name=\"degree\" value={degree} onChange={e => onChange(e)}required />\n         </div>\n         <div className=\"form-group\">\n           <input type=\"text\" placeholder=\"Field Of Study\" name=\"fieldofstudy\" value={fieldofstudy} onChange={e => onChange(e)}/>\n         </div>\n         <div className=\"form-group\">\n           <h4>From Date</h4>\n           <input type=\"date\" name=\"from\" value={from} onChange={e => onChange(e)}/>\n         </div>\n          <div className=\"form-group\">\n           <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\n               setFormData({ ...formData, current: !current });\n               toggleDisabled(!toDateDisabled);\n           }}/> {' '}Currently Enrolled</p>\n         </div>\n         <div className=\"form-group\">\n           <h4>To Date</h4>\n           <input \n                type=\"date\" \n                name=\"to\" \n                value={to} \n                onChange={e => onChange(e)}\n                disabled={ toDateDisabled ? 'disabled' : ''}\n                />\n         </div>\n         <div className=\"form-group\">\n           <textarea\n             name=\"description\"\n             cols=\"30\"\n             rows=\"5\"\n             placeholder=\"Description\"\n             value={description} \n             onChange={e => onChange(e)}\n           ></textarea>\n         </div>\n         <input type=\"submit\" className=\"btn btn-primary my-1\" />\n         <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n       </form>\n        </Fragment>\n    )\n}\n\nAddEducation.propTypes = {\n    addEducation: PropTypes.func.isRequired \n}\n\nexport default connect(null, { addEducation })(AddEducation);\n","/Users/Dam/Programming/Projects/devConnector/client/src/components/dashboard/Experience.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":4,"column":2,"nodeType":"122","endLine":12,"endColumn":4},{"ruleId":"123","severity":1,"message":"124","line":48,"column":6,"nodeType":"125","endLine":48,"endColumn":34,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":2,"column":16,"nodeType":"129","messageId":"130","endLine":2,"endColumn":26},{"ruleId":"127","severity":1,"message":"128","line":2,"column":16,"nodeType":"129","messageId":"130","endLine":2,"endColumn":26},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["133"],"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",{"range":"136","text":"137"},[1650,1678],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]"]