[{"/Users/Dam/Programming/Projects/devConnector/client/src/index.js":"1","/Users/Dam/Programming/Projects/devConnector/client/src/App.js":"2","/Users/Dam/Programming/Projects/devConnector/client/src/components/layouts/Landing.js":"3","/Users/Dam/Programming/Projects/devConnector/client/src/components/layouts/Navbar.js":"4","/Users/Dam/Programming/Projects/devConnector/client/src/components/auth/Register.js":"5","/Users/Dam/Programming/Projects/devConnector/client/src/components/auth/Login.js":"6","/Users/Dam/Programming/Projects/devConnector/client/src/store.js":"7","/Users/Dam/Programming/Projects/devConnector/client/src/reducers/index.js":"8","/Users/Dam/Programming/Projects/devConnector/client/src/reducers/alert.js":"9","/Users/Dam/Programming/Projects/devConnector/client/src/actions/types.js":"10","/Users/Dam/Programming/Projects/devConnector/client/src/actions/alert.js":"11","/Users/Dam/Programming/Projects/devConnector/client/src/components/layouts/Alert.js":"12","/Users/Dam/Programming/Projects/devConnector/client/src/actions/auth.js":"13","/Users/Dam/Programming/Projects/devConnector/client/src/reducers/auth.js":"14","/Users/Dam/Programming/Projects/devConnector/client/src/utils/setAuthToken.js":"15","/Users/Dam/Programming/Projects/devConnector/client/src/components/dashboard/Dashboard.js":"16","/Users/Dam/Programming/Projects/devConnector/client/src/components/routing/PrivateRoute.js":"17","/Users/Dam/Programming/Projects/devConnector/client/src/reducers/profile.js":"18","/Users/Dam/Programming/Projects/devConnector/client/src/actions/profile.js":"19","/Users/Dam/Programming/Projects/devConnector/client/src/components/layouts/Spinner.js":"20","/Users/Dam/Programming/Projects/devConnector/client/src/components/profile-forms/CreateProfile.js":"21","/Users/Dam/Programming/Projects/devConnector/client/src/components/dashboard/DashboardActions.js":"22","/Users/Dam/Programming/Projects/devConnector/client/src/components/profile-forms/EditProfile.js":"23","/Users/Dam/Programming/Projects/devConnector/client/src/components/profile-forms/AddExperience.js":"24","/Users/Dam/Programming/Projects/devConnector/client/src/components/profile-forms/AddEducation.js":"25","/Users/Dam/Programming/Projects/devConnector/client/src/components/dashboard/Experience.js":"26","/Users/Dam/Programming/Projects/devConnector/client/src/components/dashboard/Education.js":"27"},{"size":199,"mtime":1607550669672,"results":"28","hashOfConfig":"29"},{"size":2012,"mtime":1607810663508,"results":"30","hashOfConfig":"29"},{"size":1100,"mtime":1607735622745,"results":"31","hashOfConfig":"29"},{"size":1360,"mtime":1607734382426,"results":"32","hashOfConfig":"29"},{"size":3490,"mtime":1607658450437,"results":"33","hashOfConfig":"29"},{"size":2325,"mtime":1607658341583,"results":"34","hashOfConfig":"29"},{"size":392,"mtime":1607555736594,"results":"35","hashOfConfig":"29"},{"size":201,"mtime":1607713632842,"results":"36","hashOfConfig":"29"},{"size":467,"mtime":1607743002816,"results":"37","hashOfConfig":"29"},{"size":613,"mtime":1607832060444,"results":"38","hashOfConfig":"29"},{"size":356,"mtime":1607575307977,"results":"39","hashOfConfig":"29"},{"size":496,"mtime":1607574897838,"results":"40","hashOfConfig":"29"},{"size":2203,"mtime":1607743357835,"results":"41","hashOfConfig":"29"},{"size":1333,"mtime":1607832196897,"results":"42","hashOfConfig":"29"},{"size":253,"mtime":1607655616366,"results":"43","hashOfConfig":"29"},{"size":2304,"mtime":1607833091803,"results":"44","hashOfConfig":"29"},{"size":725,"mtime":1607661436621,"results":"45","hashOfConfig":"29"},{"size":989,"mtime":1607832213850,"results":"46","hashOfConfig":"29"},{"size":4866,"mtime":1607832116281,"results":"47","hashOfConfig":"29"},{"size":293,"mtime":1607735291189,"results":"48","hashOfConfig":"29"},{"size":6216,"mtime":1607791906849,"results":"49","hashOfConfig":"29"},{"size":652,"mtime":1607745062481,"results":"50","hashOfConfig":"29"},{"size":7963,"mtime":1607814175008,"results":"51","hashOfConfig":"29"},{"size":3191,"mtime":1607810139549,"results":"52","hashOfConfig":"29"},{"size":3185,"mtime":1607810979545,"results":"53","hashOfConfig":"29"},{"size":1587,"mtime":1607832443264,"results":"54","hashOfConfig":"29"},{"size":1574,"mtime":1607832590332,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"ztem5g",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Dam/Programming/Projects/devConnector/client/src/index.js",[],["115","116"],"/Users/Dam/Programming/Projects/devConnector/client/src/App.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/components/layouts/Landing.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/components/layouts/Navbar.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/components/auth/Register.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/components/auth/Login.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/store.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/reducers/index.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/reducers/alert.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/actions/types.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/actions/alert.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/components/layouts/Alert.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/actions/auth.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/reducers/auth.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/utils/setAuthToken.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/components/dashboard/Dashboard.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/components/routing/PrivateRoute.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/reducers/profile.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/actions/profile.js",["117"],"/Users/Dam/Programming/Projects/devConnector/client/src/components/layouts/Spinner.js",["118"]," import React, { Fragment } from 'react';\n import spinner from './spinner.gif';\n\n export default () => (\n     <Fragment>\n        <img \n            src={spinner} \n            style={{width: '200px', margin: 'auto', display: 'block'}}\n            alt=\"Loading...\"\n        />\n     </Fragment>\n );","/Users/Dam/Programming/Projects/devConnector/client/src/components/profile-forms/CreateProfile.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/components/dashboard/DashboardActions.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/components/profile-forms/EditProfile.js",["119"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n  history\n}) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: ''\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile();\n\n    setFormData({\n      company: loading || !profile.company ? '' : profile.company,\n      website: loading || !profile.website ? '' : profile.website,\n      location: loading || !profile.location ? '' : profile.location,\n      status: loading || !profile.status ? '' : profile.status,\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\n      githubusername:\n        loading || !profile.githubusername ? '' : profile.githubusername,\n      bio: loading || !profile.bio ? '' : profile.bio,\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\n      instagram: loading || !profile.social ? '' : profile.social.instagram\n    });\n  }, [loading, getCurrentProfile]);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram\n  } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Edit Your Profile</h1>\n      <p className='lead'>\n        <i className='fas fa-user' /> Add some changes to your profile\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={e => onSubmit(e)}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={e => onChange(e)}>\n            <option>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type='button'\n            className='btn btn-light'\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x' />\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x' />\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x' />\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x' />\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x' />\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={e => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(\n  mapStateToProps,\n  { createProfile, getCurrentProfile }\n)(withRouter(EditProfile));","/Users/Dam/Programming/Projects/devConnector/client/src/components/profile-forms/AddExperience.js",["120"],"import React, { Fragment, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addExperience } from '../../actions/profile';\n\nconst AddExperience = ({ addExperience, history }) => {\n    const [ formData, setFormData ] = useState({\n        company: '',\n        title: '',\n        location: '',\n        from: '',\n        to: '',\n        current: false,\n        description: ''\n    });\n\n    const [ toDateDisabled, toggleDisabled ] = useState(false);\n\n    const {\n        company,\n        title,\n        location,\n        from,\n        to,\n        current,\n        description\n    } = formData;\n\n    const onChange = e => \n        setFormData({ ...formData, [e.target.name]:e.target.value }); \n\n\n    return (\n        <Fragment>\n        <h1 className=\"large text-primary\">\n        Add An Experience\n       </h1>\n       <p className=\"lead\">\n         <i className=\"fas fa-code-branch\"></i> Add any developer/programming\n         positions that you have had in the past\n       </p>\n       <small>* = required field</small>\n       <form className=\"form\" onSubmit={e => {\n           e.preventDefault();\n           addExperience(formData, history);\n       }}>\n         <div className=\"form-group\">\n           <input type=\"text\" placeholder=\"* Job Title\" name=\"title\" value={title} onChange={e => onChange(e)} required />\n         </div>\n         <div className=\"form-group\">\n           <input type=\"text\" placeholder=\"* Company\" name=\"company\" value={company} onChange={e => onChange(e)}required />\n         </div>\n         <div className=\"form-group\">\n           <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)}/>\n         </div>\n         <div className=\"form-group\">\n           <h4>From Date</h4>\n           <input type=\"date\" name=\"from\" value={from} onChange={e => onChange(e)}/>\n         </div>\n          <div className=\"form-group\">\n           <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\n               setFormData({ ...formData, current: !current });\n               toggleDisabled(!toDateDisabled);\n           }}/> {' '}Current Job</p>\n         </div>\n         <div className=\"form-group\">\n           <h4>To Date</h4>\n           <input \n                type=\"date\" \n                name=\"to\" \n                value={to} \n                onChange={e => onChange(e)}\n                disabled={ toDateDisabled ? 'disabled' : ''}\n                />\n         </div>\n         <div className=\"form-group\">\n           <textarea\n             name=\"description\"\n             cols=\"30\"\n             rows=\"5\"\n             placeholder=\"Job Description\"\n             value={description} \n             onChange={e => onChange(e)}\n           ></textarea>\n         </div>\n         <input type=\"submit\" className=\"btn btn-primary my-1\" />\n         <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n       </form>\n        </Fragment>\n    )\n}\n\nAddExperience.propTypes = {\n    addExperience: PropTypes.func.isRequired \n}\n\nexport default connect(null, { addExperience })(AddExperience);\n","/Users/Dam/Programming/Projects/devConnector/client/src/components/profile-forms/AddEducation.js",["121"],"import React, { Fragment, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addEducation } from '../../actions/profile';\n\nconst AddEducation = ({ addEducation, history }) => {\n    const [ formData, setFormData ] = useState({\n        school: '',\n        degree: '',\n        fieldofstudy: '',\n        from: '',\n        to: '',\n        current: false,\n        description: ''\n    });\n\n    const [ toDateDisabled, toggleDisabled ] = useState(false);\n\n    const {\n        school,\n        degree,\n        fieldofstudy,\n        from,\n        to,\n        current,\n        description\n    } = formData;\n\n    const onChange = e => \n        setFormData({ ...formData, [e.target.name]:e.target.value }); \n\n\n    return (\n        <Fragment>\n        <h1 className=\"large text-primary\">\n        Add Your Education\n       </h1>\n       <p className=\"lead\">\n         <i className=\"fas fa-code-branch\"></i> Add any school or bootcamp you have attended\n       </p>\n       <small>* = required field</small>\n       <form className=\"form\" onSubmit={e => {\n           e.preventDefault();\n           addEducation(formData, history);\n       }}>\n         <div className=\"form-group\">\n           <input type=\"text\" placeholder=\"* School\" name=\"school\" value={school} onChange={e => onChange(e)} required />\n         </div>\n         <div className=\"form-group\">\n           <input type=\"text\" placeholder=\"* Degree or Certficate\" name=\"degree\" value={degree} onChange={e => onChange(e)}required />\n         </div>\n         <div className=\"form-group\">\n           <input type=\"text\" placeholder=\"Field Of Study\" name=\"fieldofstudy\" value={fieldofstudy} onChange={e => onChange(e)}/>\n         </div>\n         <div className=\"form-group\">\n           <h4>From Date</h4>\n           <input type=\"date\" name=\"from\" value={from} onChange={e => onChange(e)}/>\n         </div>\n          <div className=\"form-group\">\n           <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\n               setFormData({ ...formData, current: !current });\n               toggleDisabled(!toDateDisabled);\n           }}/> {' '}Currently Enrolled</p>\n         </div>\n         <div className=\"form-group\">\n           <h4>To Date</h4>\n           <input \n                type=\"date\" \n                name=\"to\" \n                value={to} \n                onChange={e => onChange(e)}\n                disabled={ toDateDisabled ? 'disabled' : ''}\n                />\n         </div>\n         <div className=\"form-group\">\n           <textarea\n             name=\"description\"\n             cols=\"30\"\n             rows=\"5\"\n             placeholder=\"Description\"\n             value={description} \n             onChange={e => onChange(e)}\n           ></textarea>\n         </div>\n         <input type=\"submit\" className=\"btn btn-primary my-1\" />\n         <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n       </form>\n        </Fragment>\n    )\n}\n\nAddEducation.propTypes = {\n    addEducation: PropTypes.func.isRequired \n}\n\nexport default connect(null, { addEducation })(AddEducation);\n","/Users/Dam/Programming/Projects/devConnector/client/src/components/dashboard/Experience.js",[],"/Users/Dam/Programming/Projects/devConnector/client/src/components/dashboard/Education.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":181,"column":19,"nodeType":"128","messageId":"129","endLine":181,"endColumn":22},{"ruleId":"130","severity":1,"message":"131","line":4,"column":2,"nodeType":"132","endLine":12,"endColumn":4},{"ruleId":"133","severity":1,"message":"134","line":48,"column":6,"nodeType":"135","endLine":48,"endColumn":34,"suggestions":"136"},{"ruleId":"126","severity":1,"message":"137","line":2,"column":16,"nodeType":"128","messageId":"129","endLine":2,"endColumn":26},{"ruleId":"126","severity":1,"message":"137","line":2,"column":16,"nodeType":"128","messageId":"129","endLine":2,"endColumn":26},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["140"],"'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",{"range":"143","text":"144"},[1650,1678],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]"]